@model AccountingBookWeb.Models.SubjectViewModel

<script src="~/Scripts/select2.js"></script>
<link href="~/Content/css/select2.css" rel="stylesheet" />
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/initDropDownSubject.js"></script>
<script src="~/Scripts/checkFileExtension.js"></script>


@using (Html.BeginForm("AddSubject", "Subject", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create New Subject</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.InventoryNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InventoryNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InventoryNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="selectState" class="col-md-10">

                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="selectCategory" class="col-md-10">

                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", @style = "min-width:29%;" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="selectLocation" class="col-md-10">

                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, "Update Photo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.File, new { type = "file", @id = "upload", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger", @id = "fileError" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <span>@ViewBag.Error</span>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



<script>
    initSelectsForSubject("selectState", '/State/GetStates', 'StateId', @(Model.StateId == null ? 0 : Model.StateId), 'StateName');
    initSelectsForSubject("selectCategory", '/Category/GetCategoriesByName?categoryName=', 'CategoryId', @(Model.CategoryId == null ? 0 : Model.CategoryId),  'Name');
    initSelectsForSubject("selectLocation", '/Location/GetLocations', 'LocationId', @(Model.LocationId == null ? 0 : Model.LocationId), 'Address');
    document.getElementById('upload').addEventListener('change', checkFile);
</script>