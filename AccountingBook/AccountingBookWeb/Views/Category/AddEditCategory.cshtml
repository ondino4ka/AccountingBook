@model AccountingBookCommon.Models.Category

@{
    ViewBag.Title = "AddEditCategory";
}
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/initDropDownSubject.js"></script>
<script src="~/Scripts/select2.js"></script>

@if (Model != null)
{
    <h2>@(Model.Id == 0 ? "Add" : "Edit") Category</h2>
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)


            <div class="form-group">
                @Html.LabelFor(model => model.Pid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div  id="selectCategory" class="col-md-10">
                  
                    @Html.ValidationMessageFor(model => model.Pid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @maxlength = 50, @minlength = "6" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}
else
{
    @ViewBag.Error;
}

<div>
    @Html.ActionLink("Back to Search", "SearchCategories")
</div>


<script>
    console.log();
    initSelectsForSubject("selectCategory", '/Category/GetCategoriesBesidesCurrent?categoryId=' + @Model.Id, 'pid', @(Model.Pid == null ? 0 : Model.Pid),  'Name');
</script>