//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccountingBookData.AccountingBookServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class CategoryDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Pid {
            get {
                return this.PidField;
            }
            set {
                if ((this.PidField.Equals(value) != true)) {
                    this.PidField = value;
                    this.RaisePropertyChanged("Pid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "oException")]
    [System.SerializableAttribute()]
    public partial class ServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubjectDetailsDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class SubjectDetailsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventoryNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InventoryNumber {
            get {
                return this.InventoryNumberField;
            }
            set {
                if ((this.InventoryNumberField.Equals(value) != true)) {
                    this.InventoryNumberField = value;
                    this.RaisePropertyChanged("InventoryNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAuthorizationDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class UserAuthorizationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AccountingBookData.AccountingBookServiceReference.RoleAuthorizationDto[] RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AccountingBookData.AccountingBookServiceReference.RoleAuthorizationDto[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleAuthorizationDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class RoleAuthorizationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class StateDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class RoleDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class LocationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubjectDto", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class SubjectDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventoryNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InventoryNumber {
            get {
                return this.InventoryNumberField;
            }
            set {
                if ((this.InventoryNumberField.Equals(value) != true)) {
                    this.InventoryNumberField = value;
                    this.RaisePropertyChanged("InventoryNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountingBookServiceReference.IGetService")]
    public interface IGetService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetCategories", ReplyAction="http://tempuri.org/IGetService/GetCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetCategoriesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.CategoryDto[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetCategories", ReplyAction="http://tempuri.org/IGetService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.CategoryDto[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetSubjectsByCategoryId", ReplyAction="http://tempuri.org/IGetService/GetSubjectsByCategoryIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetSubjectsByCategoryIdServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto[] GetSubjectsByCategoryId(System.Nullable<int> categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetSubjectsByCategoryId", ReplyAction="http://tempuri.org/IGetService/GetSubjectsByCategoryIdResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto[]> GetSubjectsByCategoryIdAsync(System.Nullable<int> categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetSubjectInformationByInventoryNumber", ReplyAction="http://tempuri.org/IGetService/GetSubjectInformationByInventoryNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetSubjectInformationByInventoryNumberServiceFault" +
            "Fault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto GetSubjectInformationByInventoryNumber(int inventoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetSubjectInformationByInventoryNumber", ReplyAction="http://tempuri.org/IGetService/GetSubjectInformationByInventoryNumberResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto> GetSubjectInformationByInventoryNumberAsync(int inventoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetUserAuthorizationByName", ReplyAction="http://tempuri.org/IGetService/GetUserAuthorizationByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetUserAuthorizationByNameServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.UserAuthorizationDto GetUserAuthorizationByName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetUserAuthorizationByName", ReplyAction="http://tempuri.org/IGetService/GetUserAuthorizationByNameResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.UserAuthorizationDto> GetUserAuthorizationByNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/IsValidUser", ReplyAction="http://tempuri.org/IGetService/IsValidUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/IsValidUserServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        bool IsValidUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/IsValidUser", ReplyAction="http://tempuri.org/IGetService/IsValidUserResponse")]
        System.Threading.Tasks.Task<bool> IsValidUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetRolesAuthorizationByUserId", ReplyAction="http://tempuri.org/IGetService/GetRolesAuthorizationByUserIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetRolesAuthorizationByUserIdServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.RoleAuthorizationDto[] GetRolesAuthorizationByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetRolesAuthorizationByUserId", ReplyAction="http://tempuri.org/IGetService/GetRolesAuthorizationByUserIdResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.RoleAuthorizationDto[]> GetRolesAuthorizationByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetCategoriesByName", ReplyAction="http://tempuri.org/IGetService/GetCategoriesByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetCategoriesByNameServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.CategoryDto[] GetCategoriesByName(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetCategoriesByName", ReplyAction="http://tempuri.org/IGetService/GetCategoriesByNameResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.CategoryDto[]> GetCategoriesByNameAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetSubjectsByNameCategoryIdAndStateId", ReplyAction="http://tempuri.org/IGetService/GetSubjectsByNameCategoryIdAndStateIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetSubjectsByNameCategoryIdAndStateIdServiceFaultF" +
            "ault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto[] GetSubjectsByNameCategoryIdAndStateId(System.Nullable<int> categoryId, System.Nullable<int> stateId, string subjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetSubjectsByNameCategoryIdAndStateId", ReplyAction="http://tempuri.org/IGetService/GetSubjectsByNameCategoryIdAndStateIdResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto[]> GetSubjectsByNameCategoryIdAndStateIdAsync(System.Nullable<int> categoryId, System.Nullable<int> stateId, string subjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetStates", ReplyAction="http://tempuri.org/IGetService/GetStatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetStatesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.StateDto[] GetStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetStates", ReplyAction="http://tempuri.org/IGetService/GetStatesResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.StateDto[]> GetStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/IsExistsUser", ReplyAction="http://tempuri.org/IGetService/IsExistsUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/IsExistsUserServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        bool IsExistsUser(int userId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/IsExistsUser", ReplyAction="http://tempuri.org/IGetService/IsExistsUserResponse")]
        System.Threading.Tasks.Task<bool> IsExistsUserAsync(int userId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetRoles", ReplyAction="http://tempuri.org/IGetService/GetRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetRolesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.RoleDto[] GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetRoles", ReplyAction="http://tempuri.org/IGetService/GetRolesResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.RoleDto[]> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetUserById", ReplyAction="http://tempuri.org/IGetService/GetUserByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetUserByIdServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.UserDto GetUserById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetUserById", ReplyAction="http://tempuri.org/IGetService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.UserDto> GetUserByIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetUsersByName", ReplyAction="http://tempuri.org/IGetService/GetUsersByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetUsersByNameServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.UserDto[] GetUsersByName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetUsersByName", ReplyAction="http://tempuri.org/IGetService/GetUsersByNameResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.UserDto[]> GetUsersByNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetLocations", ReplyAction="http://tempuri.org/IGetService/GetLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetLocationsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.LocationDto[] GetLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetLocations", ReplyAction="http://tempuri.org/IGetService/GetLocationsResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.LocationDto[]> GetLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetSubjectByInventoryNumber", ReplyAction="http://tempuri.org/IGetService/GetSubjectByInventoryNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetSubjectByInventoryNumberServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.SubjectDto GetSubjectByInventoryNumber(int inventoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetSubjectByInventoryNumber", ReplyAction="http://tempuri.org/IGetService/GetSubjectByInventoryNumberResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.SubjectDto> GetSubjectByInventoryNumberAsync(int inventoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/IsExistsSubject", ReplyAction="http://tempuri.org/IGetService/IsExistsSubjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/IsExistsSubjectServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        bool IsExistsSubject(int inventoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/IsExistsSubject", ReplyAction="http://tempuri.org/IGetService/IsExistsSubjectResponse")]
        System.Threading.Tasks.Task<bool> IsExistsSubjectAsync(int inventoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetLocationsByAddress", ReplyAction="http://tempuri.org/IGetService/GetLocationsByAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetLocationsByAddressServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.LocationDto[] GetLocationsByAddress(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetLocationsByAddress", ReplyAction="http://tempuri.org/IGetService/GetLocationsByAddressResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.LocationDto[]> GetLocationsByAddressAsync(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetLocationsById", ReplyAction="http://tempuri.org/IGetService/GetLocationsByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IGetService/GetLocationsByIdServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        AccountingBookData.AccountingBookServiceReference.LocationDto GetLocationsById(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetService/GetLocationsById", ReplyAction="http://tempuri.org/IGetService/GetLocationsByIdResponse")]
        System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.LocationDto> GetLocationsByIdAsync(int locationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetServiceChannel : AccountingBookData.AccountingBookServiceReference.IGetService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServiceClient : System.ServiceModel.ClientBase<AccountingBookData.AccountingBookServiceReference.IGetService>, AccountingBookData.AccountingBookServiceReference.IGetService {
        
        public GetServiceClient() {
        }
        
        public GetServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AccountingBookData.AccountingBookServiceReference.CategoryDto[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.CategoryDto[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto[] GetSubjectsByCategoryId(System.Nullable<int> categoryId) {
            return base.Channel.GetSubjectsByCategoryId(categoryId);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto[]> GetSubjectsByCategoryIdAsync(System.Nullable<int> categoryId) {
            return base.Channel.GetSubjectsByCategoryIdAsync(categoryId);
        }
        
        public AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto GetSubjectInformationByInventoryNumber(int inventoryNumber) {
            return base.Channel.GetSubjectInformationByInventoryNumber(inventoryNumber);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto> GetSubjectInformationByInventoryNumberAsync(int inventoryNumber) {
            return base.Channel.GetSubjectInformationByInventoryNumberAsync(inventoryNumber);
        }
        
        public AccountingBookData.AccountingBookServiceReference.UserAuthorizationDto GetUserAuthorizationByName(string userName) {
            return base.Channel.GetUserAuthorizationByName(userName);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.UserAuthorizationDto> GetUserAuthorizationByNameAsync(string userName) {
            return base.Channel.GetUserAuthorizationByNameAsync(userName);
        }
        
        public bool IsValidUser(string userName, string password) {
            return base.Channel.IsValidUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidUserAsync(string userName, string password) {
            return base.Channel.IsValidUserAsync(userName, password);
        }
        
        public AccountingBookData.AccountingBookServiceReference.RoleAuthorizationDto[] GetRolesAuthorizationByUserId(int userId) {
            return base.Channel.GetRolesAuthorizationByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.RoleAuthorizationDto[]> GetRolesAuthorizationByUserIdAsync(int userId) {
            return base.Channel.GetRolesAuthorizationByUserIdAsync(userId);
        }
        
        public AccountingBookData.AccountingBookServiceReference.CategoryDto[] GetCategoriesByName(string categoryName) {
            return base.Channel.GetCategoriesByName(categoryName);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.CategoryDto[]> GetCategoriesByNameAsync(string categoryName) {
            return base.Channel.GetCategoriesByNameAsync(categoryName);
        }
        
        public AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto[] GetSubjectsByNameCategoryIdAndStateId(System.Nullable<int> categoryId, System.Nullable<int> stateId, string subjectName) {
            return base.Channel.GetSubjectsByNameCategoryIdAndStateId(categoryId, stateId, subjectName);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.SubjectDetailsDto[]> GetSubjectsByNameCategoryIdAndStateIdAsync(System.Nullable<int> categoryId, System.Nullable<int> stateId, string subjectName) {
            return base.Channel.GetSubjectsByNameCategoryIdAndStateIdAsync(categoryId, stateId, subjectName);
        }
        
        public AccountingBookData.AccountingBookServiceReference.StateDto[] GetStates() {
            return base.Channel.GetStates();
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.StateDto[]> GetStatesAsync() {
            return base.Channel.GetStatesAsync();
        }
        
        public bool IsExistsUser(int userId, string userName) {
            return base.Channel.IsExistsUser(userId, userName);
        }
        
        public System.Threading.Tasks.Task<bool> IsExistsUserAsync(int userId, string userName) {
            return base.Channel.IsExistsUserAsync(userId, userName);
        }
        
        public AccountingBookData.AccountingBookServiceReference.RoleDto[] GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.RoleDto[]> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public AccountingBookData.AccountingBookServiceReference.UserDto GetUserById(int userId) {
            return base.Channel.GetUserById(userId);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.UserDto> GetUserByIdAsync(int userId) {
            return base.Channel.GetUserByIdAsync(userId);
        }
        
        public AccountingBookData.AccountingBookServiceReference.UserDto[] GetUsersByName(string userName) {
            return base.Channel.GetUsersByName(userName);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.UserDto[]> GetUsersByNameAsync(string userName) {
            return base.Channel.GetUsersByNameAsync(userName);
        }
        
        public AccountingBookData.AccountingBookServiceReference.LocationDto[] GetLocations() {
            return base.Channel.GetLocations();
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.LocationDto[]> GetLocationsAsync() {
            return base.Channel.GetLocationsAsync();
        }
        
        public AccountingBookData.AccountingBookServiceReference.SubjectDto GetSubjectByInventoryNumber(int inventoryNumber) {
            return base.Channel.GetSubjectByInventoryNumber(inventoryNumber);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.SubjectDto> GetSubjectByInventoryNumberAsync(int inventoryNumber) {
            return base.Channel.GetSubjectByInventoryNumberAsync(inventoryNumber);
        }
        
        public bool IsExistsSubject(int inventoryNumber) {
            return base.Channel.IsExistsSubject(inventoryNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsExistsSubjectAsync(int inventoryNumber) {
            return base.Channel.IsExistsSubjectAsync(inventoryNumber);
        }
        
        public AccountingBookData.AccountingBookServiceReference.LocationDto[] GetLocationsByAddress(string address) {
            return base.Channel.GetLocationsByAddress(address);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.LocationDto[]> GetLocationsByAddressAsync(string address) {
            return base.Channel.GetLocationsByAddressAsync(address);
        }
        
        public AccountingBookData.AccountingBookServiceReference.LocationDto GetLocationsById(int locationId) {
            return base.Channel.GetLocationsById(locationId);
        }
        
        public System.Threading.Tasks.Task<AccountingBookData.AccountingBookServiceReference.LocationDto> GetLocationsByIdAsync(int locationId) {
            return base.Channel.GetLocationsByIdAsync(locationId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountingBookServiceReference.IAddService")]
    public interface IAddService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddService/AddUser", ReplyAction="http://tempuri.org/IAddService/AddUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IAddService/AddUserServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void AddUser(AccountingBookData.AccountingBookServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddService/AddUser", ReplyAction="http://tempuri.org/IAddService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(AccountingBookData.AccountingBookServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddService/AddSubject", ReplyAction="http://tempuri.org/IAddService/AddSubjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IAddService/AddSubjectServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void AddSubject(AccountingBookData.AccountingBookServiceReference.SubjectDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddService/AddSubject", ReplyAction="http://tempuri.org/IAddService/AddSubjectResponse")]
        System.Threading.Tasks.Task AddSubjectAsync(AccountingBookData.AccountingBookServiceReference.SubjectDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddService/AddLocation", ReplyAction="http://tempuri.org/IAddService/AddLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IAddService/AddLocationServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void AddLocation(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddService/AddLocation", ReplyAction="http://tempuri.org/IAddService/AddLocationResponse")]
        System.Threading.Tasks.Task AddLocationAsync(string address);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddServiceChannel : AccountingBookData.AccountingBookServiceReference.IAddService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddServiceClient : System.ServiceModel.ClientBase<AccountingBookData.AccountingBookServiceReference.IAddService>, AccountingBookData.AccountingBookServiceReference.IAddService {
        
        public AddServiceClient() {
        }
        
        public AddServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddUser(AccountingBookData.AccountingBookServiceReference.UserDto userDto) {
            base.Channel.AddUser(userDto);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(AccountingBookData.AccountingBookServiceReference.UserDto userDto) {
            return base.Channel.AddUserAsync(userDto);
        }
        
        public void AddSubject(AccountingBookData.AccountingBookServiceReference.SubjectDto userDto) {
            base.Channel.AddSubject(userDto);
        }
        
        public System.Threading.Tasks.Task AddSubjectAsync(AccountingBookData.AccountingBookServiceReference.SubjectDto userDto) {
            return base.Channel.AddSubjectAsync(userDto);
        }
        
        public void AddLocation(string address) {
            base.Channel.AddLocation(address);
        }
        
        public System.Threading.Tasks.Task AddLocationAsync(string address) {
            return base.Channel.AddLocationAsync(address);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountingBookServiceReference.IEditService")]
    public interface IEditService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditService/EditUser", ReplyAction="http://tempuri.org/IEditService/EditUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IEditService/EditUserServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void EditUser(AccountingBookData.AccountingBookServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditService/EditUser", ReplyAction="http://tempuri.org/IEditService/EditUserResponse")]
        System.Threading.Tasks.Task EditUserAsync(AccountingBookData.AccountingBookServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditService/EditSubjectInformation", ReplyAction="http://tempuri.org/IEditService/EditSubjectInformationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IEditService/EditSubjectInformationServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void EditSubjectInformation(AccountingBookData.AccountingBookServiceReference.SubjectDto subjectDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditService/EditSubjectInformation", ReplyAction="http://tempuri.org/IEditService/EditSubjectInformationResponse")]
        System.Threading.Tasks.Task EditSubjectInformationAsync(AccountingBookData.AccountingBookServiceReference.SubjectDto subjectDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditService/EditSubjectPhoto", ReplyAction="http://tempuri.org/IEditService/EditSubjectPhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IEditService/EditSubjectPhotoServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void EditSubjectPhoto(int inventoryNumber, string photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditService/EditSubjectPhoto", ReplyAction="http://tempuri.org/IEditService/EditSubjectPhotoResponse")]
        System.Threading.Tasks.Task EditSubjectPhotoAsync(int inventoryNumber, string photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditService/EditLocation", ReplyAction="http://tempuri.org/IEditService/EditLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IEditService/EditLocationServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void EditLocation(int locationId, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditService/EditLocation", ReplyAction="http://tempuri.org/IEditService/EditLocationResponse")]
        System.Threading.Tasks.Task EditLocationAsync(int locationId, string address);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEditServiceChannel : AccountingBookData.AccountingBookServiceReference.IEditService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditServiceClient : System.ServiceModel.ClientBase<AccountingBookData.AccountingBookServiceReference.IEditService>, AccountingBookData.AccountingBookServiceReference.IEditService {
        
        public EditServiceClient() {
        }
        
        public EditServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EditServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EditServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EditServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void EditUser(AccountingBookData.AccountingBookServiceReference.UserDto userDto) {
            base.Channel.EditUser(userDto);
        }
        
        public System.Threading.Tasks.Task EditUserAsync(AccountingBookData.AccountingBookServiceReference.UserDto userDto) {
            return base.Channel.EditUserAsync(userDto);
        }
        
        public void EditSubjectInformation(AccountingBookData.AccountingBookServiceReference.SubjectDto subjectDto) {
            base.Channel.EditSubjectInformation(subjectDto);
        }
        
        public System.Threading.Tasks.Task EditSubjectInformationAsync(AccountingBookData.AccountingBookServiceReference.SubjectDto subjectDto) {
            return base.Channel.EditSubjectInformationAsync(subjectDto);
        }
        
        public void EditSubjectPhoto(int inventoryNumber, string photo) {
            base.Channel.EditSubjectPhoto(inventoryNumber, photo);
        }
        
        public System.Threading.Tasks.Task EditSubjectPhotoAsync(int inventoryNumber, string photo) {
            return base.Channel.EditSubjectPhotoAsync(inventoryNumber, photo);
        }
        
        public void EditLocation(int locationId, string address) {
            base.Channel.EditLocation(locationId, address);
        }
        
        public System.Threading.Tasks.Task EditLocationAsync(int locationId, string address) {
            return base.Channel.EditLocationAsync(locationId, address);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountingBookServiceReference.IDeleteService")]
    public interface IDeleteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeleteService/DeleteUserById", ReplyAction="http://tempuri.org/IDeleteService/DeleteUserByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IDeleteService/DeleteUserByIdServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void DeleteUserById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeleteService/DeleteUserById", ReplyAction="http://tempuri.org/IDeleteService/DeleteUserByIdResponse")]
        System.Threading.Tasks.Task DeleteUserByIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeleteService/DeleteSubjectByInventoryNumber", ReplyAction="http://tempuri.org/IDeleteService/DeleteSubjectByInventoryNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IDeleteService/DeleteSubjectByInventoryNumberServiceFaultFault" +
            "", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void DeleteSubjectByInventoryNumber(int inventoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeleteService/DeleteSubjectByInventoryNumber", ReplyAction="http://tempuri.org/IDeleteService/DeleteSubjectByInventoryNumberResponse")]
        System.Threading.Tasks.Task DeleteSubjectByInventoryNumberAsync(int inventoryNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeleteService/DeleteLocationById", ReplyAction="http://tempuri.org/IDeleteService/DeleteLocationByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IDeleteService/DeleteLocationByIdServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void DeleteLocationById(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeleteService/DeleteLocationById", ReplyAction="http://tempuri.org/IDeleteService/DeleteLocationByIdResponse")]
        System.Threading.Tasks.Task DeleteLocationByIdAsync(int locationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeleteServiceChannel : AccountingBookData.AccountingBookServiceReference.IDeleteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteServiceClient : System.ServiceModel.ClientBase<AccountingBookData.AccountingBookServiceReference.IDeleteService>, AccountingBookData.AccountingBookServiceReference.IDeleteService {
        
        public DeleteServiceClient() {
        }
        
        public DeleteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeleteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeleteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeleteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DeleteUserById(int userId) {
            base.Channel.DeleteUserById(userId);
        }
        
        public System.Threading.Tasks.Task DeleteUserByIdAsync(int userId) {
            return base.Channel.DeleteUserByIdAsync(userId);
        }
        
        public void DeleteSubjectByInventoryNumber(int inventoryNumber) {
            base.Channel.DeleteSubjectByInventoryNumber(inventoryNumber);
        }
        
        public System.Threading.Tasks.Task DeleteSubjectByInventoryNumberAsync(int inventoryNumber) {
            return base.Channel.DeleteSubjectByInventoryNumberAsync(inventoryNumber);
        }
        
        public void DeleteLocationById(int locationId) {
            base.Channel.DeleteLocationById(locationId);
        }
        
        public System.Threading.Tasks.Task DeleteLocationByIdAsync(int locationId) {
            return base.Channel.DeleteLocationByIdAsync(locationId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountingBookServiceReference.IFileService")]
    public interface IFileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UploadPhoto", ReplyAction="http://tempuri.org/IFileService/UploadPhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IFileService/UploadPhotoServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void UploadPhoto(string name, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UploadPhoto", ReplyAction="http://tempuri.org/IFileService/UploadPhotoResponse")]
        System.Threading.Tasks.Task UploadPhotoAsync(string name, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DownloadPhoto", ReplyAction="http://tempuri.org/IFileService/DownloadPhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IFileService/DownloadPhotoServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        byte[] DownloadPhoto(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DownloadPhoto", ReplyAction="http://tempuri.org/IFileService/DownloadPhotoResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadPhotoAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DeletePhoto", ReplyAction="http://tempuri.org/IFileService/DeletePhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AccountingBookData.AccountingBookServiceReference.ServiceFault), Action="http://tempuri.org/IFileService/DeletePhotoServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AccountingBookService.Contracts.Models.Dt" +
            "oException")]
        void DeletePhoto(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DeletePhoto", ReplyAction="http://tempuri.org/IFileService/DeletePhotoResponse")]
        System.Threading.Tasks.Task DeletePhotoAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileServiceChannel : AccountingBookData.AccountingBookServiceReference.IFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileServiceClient : System.ServiceModel.ClientBase<AccountingBookData.AccountingBookServiceReference.IFileService>, AccountingBookData.AccountingBookServiceReference.IFileService {
        
        public FileServiceClient() {
        }
        
        public FileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UploadPhoto(string name, byte[] photo) {
            base.Channel.UploadPhoto(name, photo);
        }
        
        public System.Threading.Tasks.Task UploadPhotoAsync(string name, byte[] photo) {
            return base.Channel.UploadPhotoAsync(name, photo);
        }
        
        public byte[] DownloadPhoto(string name) {
            return base.Channel.DownloadPhoto(name);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadPhotoAsync(string name) {
            return base.Channel.DownloadPhotoAsync(name);
        }
        
        public void DeletePhoto(string name) {
            base.Channel.DeletePhoto(name);
        }
        
        public System.Threading.Tasks.Task DeletePhotoAsync(string name) {
            return base.Channel.DeletePhotoAsync(name);
        }
    }
}
